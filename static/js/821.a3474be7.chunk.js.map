{"version":3,"file":"static/js/821.a3474be7.chunk.js","mappings":"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","sources":["Redux/Actions.ts","Components/ArticleItem/ArticleItem.tsx","Components/ArticleList/ArticleList.tsx","Redux/ActionsDispatch.ts","Hooks/useObserver.ts","Components/SearchResult/SearchResult.tsx","Components/SearchPanel/SearchPanel.tsx","Pages/HomePage/HomePage.tsx","Services/SpaceFlightApi.ts"],"sourcesContent":["import { ActionType, Action } from './ActionsTypes'\r\nimport { ThunkActionDispatch } from 'redux-thunk'\r\nimport { ActionCreator, Dispatch } from 'redux'\r\nimport SpaceFlightApi from '../Services/SpaceFlightApi'\r\nimport { ArticleQueryParams } from '../Types/Article'\r\n\r\n\r\nconst spaceSwapi = new SpaceFlightApi()\r\n\r\nexport const getArticles = (params: ArticleQueryParams) => {\r\n    return async (dispatch: Dispatch<Action>) => {\r\n        try {\r\n            dispatch({ type: ActionType.GET_ARTICLES_PENDING })\r\n            const response = await spaceSwapi.getArticles(params)\r\n            dispatch({ type: ActionType.GET_ARTICLES_SUCCESS, payload: response })\r\n        } catch (err: any) {\r\n            dispatch({ type: ActionType.GET_ARTICLES_FAIL, payload: err.message })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import React, { FC, useContext } from 'react';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchContext } from '../../context/articleContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport { CardActionArea } from '@mui/material';\r\nimport './ArticleItem.scss';\r\ninterface ArticleItemProps {\r\n    imageUrl: string;\r\n    title: string;\r\n    summary: string;\r\n    id?: number;\r\n    updatedAt: string;\r\n}\r\nconst ArticleItem: FC<ArticleItemProps> = ({ imageUrl, title, summary, updatedAt, id }) => {\r\n    const { value } = useContext(SearchContext);\r\n    const today = new Date(updatedAt);\r\n    const navigate = useNavigate();\r\n    return (\r\n        <Card sx={{ maxWidth: 400, maxHeight: 600, height: 530 }} className='card'>\r\n            <CardActionArea>\r\n                <CardMedia component='img' height='217' image={imageUrl} alt='article-image' />\r\n                <CardContent>\r\n                    <Typography\r\n                        variant='body2'\r\n                        color='text.secondary'\r\n                        sx={{\r\n                            marginBottom: 1,\r\n                        }}\r\n                    >\r\n                        <CalendarTodayIcon\r\n                            sx={{\r\n                                display: 'inline',\r\n                                position: 'relative',\r\n                                top: 2,\r\n                                mx: 0.5,\r\n                                fontSize: 14,\r\n                                marginLeft: 0,\r\n                            }}\r\n                        />\r\n                        {today.toLocaleDateString('en-US', {\r\n                            month: 'long',\r\n                            day: 'numeric',\r\n                            year: 'numeric',\r\n                        })}\r\n                    </Typography>\r\n                    <Typography gutterBottom variant='h5' component='div' className='title'>\r\n                        <Highlighter\r\n                            highlightClassName='YourHighlightClass'\r\n                            searchWords={value.split(' ')}\r\n                            autoEscape={true}\r\n                            textToHighlight={title}\r\n                        />\r\n                    </Typography>\r\n                    <Typography variant='body2' color='text.secondary' className='subtitle'>\r\n                        <Highlighter\r\n                            highlightClassName='YourHighlightClass subtitle'\r\n                            searchWords={value.split(' ')}\r\n                            autoEscape={true}\r\n                            textToHighlight={summary}\r\n                        />\r\n                    </Typography>\r\n                    <button className='article-button' onClick={() => navigate(`/Articles/${id}`)}>\r\n                        Read more\r\n                        <ArrowRightAltIcon\r\n                            sx={{\r\n                                color: 'grey',\r\n                                fontWeight: 300,\r\n                                fontSize: 16,\r\n                                position: 'relative',\r\n                                top: 3,\r\n                                marginLeft: 0.5,\r\n                            }}\r\n                        />\r\n                    </button>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ArticleItem;\r\n","import React, { useEffect, useState, useRef, useContext } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getArticles } from '../../Redux/Actions';\r\nimport { actyionDispatch } from '../../Redux/ActionsDispatch';\r\nimport ArticleItem from '../ArticleItem/ArticleItem';\r\nimport { RootState } from '../../Store/Store';\r\nimport { useObserver } from '../../Hooks/useObserver';\r\nimport { SearchContext } from '../../context/articleContext';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport { useParams } from 'react-router-dom';\r\nimport Stack from '@mui/material/Stack';\r\nimport SnackbarContent from '@mui/material/SnackbarContent';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport './ArticleList.scss';\r\n\r\nconst ArticleList = () => {\r\n    const itemsEls = useRef<HTMLDivElement>(null);\r\n    const [next, setNext] = useState<boolean>(true);\r\n    const { articles, loading } = useSelector((state: RootState) => state);\r\n    const { dispatch } = actyionDispatch();\r\n    const { value, count, setCount } = useContext(SearchContext);\r\n\r\n    useObserver(itemsEls, next, loading, () => setCount(count + 9), articles.length);\r\n    const { id } = useParams();\r\n    const idx = Number(id);\r\n    useEffect(() => {\r\n        dispatch(\r\n            getArticles({\r\n                _limit: count,\r\n                title_contains: value,\r\n                summary_contains: value,\r\n            }),\r\n        );\r\n    }, [count, value]);\r\n\r\n    const action = (\r\n        <Stack spacing={2} sx={{ maxWidth: 600 }}>\r\n            <SnackbarContent\r\n                sx={{ marginTop: 2, textTransform: 'uppercase' }}\r\n                message={'No articles'}\r\n            />\r\n        </Stack>\r\n    );\r\n    if (!articles.length && !loading) {\r\n        return action;\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }} >\r\n            <Grid container spacing={{xs: 1, sm: 2, md: 4}} columns={{ xs: 4, sm: 8, md: 12 }} direction={{xs: 'column', sm: 'row'}} className='article-list' >\r\n                {articles.map((item) => (\r\n                    <Grid item xs={2} sm={4} md={4} key={item.id}>\r\n                        <ArticleItem {...item} />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            {loading ? (\r\n                <Grid\r\n                    container\r\n                    spacing={6}\r\n                    columns={{ xs: 4, sm: 8, md: 12 }}\r\n                    style={{ marginTop: '20px' }}\r\n                >\r\n                    {Array.from(Array(3)).map((_, index) => (\r\n                        <Grid item xs={2} sm={4} md={4} key={index}>\r\n                            <Skeleton\r\n                                variant='rectangular'\r\n                                height={217}\r\n                                style={{ maxWidth: '400px' }}\r\n                            />\r\n                            <Skeleton animation='wave' height={90} />\r\n                            <Skeleton animation='wave' height={130} />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            ) : null}\r\n            <div ref={itemsEls}></div>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ArticleList;\r\n","import { ThunkDispatch } from 'redux-thunk'\r\nimport { AnyAction } from 'redux'\r\nimport { State } from './Reducer'\r\nimport { useDispatch } from 'react-redux'\r\n\r\ntype AppDispatch = ThunkDispatch<State, any, AnyAction>\r\nexport const actyionDispatch = () => {\r\n    const dispatch: AppDispatch = useDispatch()\r\n    return {\r\n        dispatch\r\n    }\r\n}","import { useEffect, useRef } from 'react';\r\n\r\nexport const useObserver = (\r\n    lastElement: { current: any },\r\n    canLoad: any,\r\n    loading: boolean,\r\n    callback: () => void,\r\n    articles: number,\r\n) => {\r\n    const observer = useRef(null) as any;\r\n    useEffect(() => {\r\n        if (loading) return;\r\n        if (!articles) return;\r\n        if (observer.current) observer.current.disconnect();\r\n        const cb = (entries: { isIntersecting: any }[]) => {\r\n            if (entries[0].isIntersecting && canLoad) {\r\n                callback();\r\n            }\r\n        };\r\n        observer.current = new IntersectionObserver(cb);\r\n        observer.current.observe(lastElement.current);\r\n    }, [loading]);\r\n};\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../Store/Store';\r\nimport './SearchResult.scss';\r\n\r\ninterface SearchResultProps {\r\n    count: number;\r\n}\r\nconst SearchResult: FC<SearchResultProps> = () => {\r\n    const { articles } = useSelector((state: RootState) => state);\r\n\r\n    return <div className='search-result'>Results: {articles.length}</div>;\r\n};\r\n\r\nexport default SearchResult;\r\n","import React, { useState, useContext } from 'react';\r\nimport SearchResult from '../SearchResult/SearchResult';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { SearchContext } from '../../context/articleContext';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport './SearchPanel.scss';\r\n\r\nconst SearchPanel = () => {\r\n    const [query, setQuery] = useState<string>('');\r\n    const { value, searchHandler, resetHandler } = useContext(SearchContext);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.value === '') {\r\n            resetHandler();\r\n        }\r\n        searchHandler(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className='search-panel'>\r\n            <InputLabel className='search-label' htmlFor='search'>\r\n                Filter by keywords\r\n            </InputLabel>\r\n            <TextField\r\n                value={value}\r\n                onChange={handleChange}\r\n                id='search'\r\n                sx={{\r\n                    width: {\r\n                        xs: '70%', sm: '65%', md: '50%'\r\n                    }, height: '50px'\r\n                }}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                        <InputAdornment position='start'>\r\n                            <SearchIcon />\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n            <SearchResult count={6} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPanel;\r\n","import React from 'react';\r\nimport ArticleList from '../../Components/ArticleList/ArticleList';\r\nimport SearchPanel from '../../Components/SearchPanel/SearchPanel';\r\nimport Container from '@mui/material/Container';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <Container className='container'>\r\n            <SearchPanel />\r\n            <ArticleList/>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import qs from 'query-string';\r\nimport { ArticleQueryParams } from '../Types/Article';\r\n\r\nexport default class SpaceFlightApi {\r\n    urlBase = 'https://api.spaceflightnewsapi.net/v3'\r\n    getData = async (url: string) => {\r\n        const data = await fetch(`${this.urlBase}/${url}`)\r\n        const response = await data.json()\r\n        return response\r\n    }\r\n    getArticles = async (params: ArticleQueryParams) => {\r\n        try {\r\n            const articles = await this.getData(`articles?${qs.stringify(params)}`)\r\n            return articles\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    getArticle = async (id: string) => {\r\n        try {\r\n            const articles = await this.getData(`articles/${id}`)\r\n            return articles\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n"],"names":["spaceSwapi","SpaceFlightApi","imageUrl","title","summary","updatedAt","id","value","useContext","SearchContext","today","Date","navigate","useNavigate","Card","sx","maxWidth","maxHeight","height","className","CardActionArea","CardMedia","component","image","alt","CardContent","Typography","variant","color","marginBottom","CalendarToday","display","position","top","mx","fontSize","marginLeft","toLocaleDateString","month","day","year","gutterBottom","highlightClassName","searchWords","split","autoEscape","textToHighlight","onClick","ArrowRightAlt","fontWeight","itemsEls","useRef","useState","next","useSelector","state","articles","loading","dispatch","useDispatch","count","setCount","lastElement","canLoad","callback","observer","useEffect","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","useObserver","length","useParams","Number","params","_limit","title_contains","summary_contains","type","ActionType","getArticles","response","payload","message","action","Stack","spacing","SnackbarContent","marginTop","textTransform","Box","flexGrow","Grid","container","xs","sm","md","columns","direction","map","item","style","Array","from","_","index","Skeleton","animation","ref","searchHandler","resetHandler","InputLabel","htmlFor","TextField","onChange","event","target","width","InputProps","startAdornment","InputAdornment","Search","Container","urlBase","getData","url","fetch","data","json","qs","console","log","getArticle"],"sourceRoot":""}